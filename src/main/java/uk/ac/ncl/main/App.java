package uk.ac.ncl.main;
// Imports //

import java.awt.FlowLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.MalformedURLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

// SWING //
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
/**
 * Class uses Java Swing to provide a graphical interface for the demonstrator program used in my dissertation, 'The demonstration of vulnerabilities in online payment systems'
 * @author Rayyan Iqbal
 * @version 1.04
 * @date 25/04/2020
 *
 */
public class App {
	/* Declarations */
	// Swing Variables //
	private JFrame jframe;
	private JComboBox cb;
	// Class Variables //
	private static String banks[] = { "HSBC", "Barclays", "Royal Bank of Scotland", "Natwest", "Lloyds" };
	private final static int X = 300; /* Dimensions */
	private final static int Y = 450; /* Dimensions */
	private final static int LOGO_DIMENSION_X = 200;
	private final static int LOGO_DIMENSION_Y = 66;
	public static JTextArea log = new JTextArea(10, 27); /* console */
	/* End Declarations */

	public static void main(String[] args) {
		new App();
	}

	/**
	 * Constructor method - Creates an instance of the application for scraping the
	 * trusted numbers and sending a spoofed text
	 */
	public App() {

		/* Setup the main JFrame with a Flow Layout */
		this.jframe = new JFrame("Spoofing Demonstrator"); // title //
		jframe.setLayout(new FlowLayout());
		jframe.setSize(X, Y); // init size to X & Y

		/* Setup header panel to contain University logo */
		JPanel headerPanel = new JPanel(new FlowLayout());
		JLabel iconHolder = new JLabel();
		ImageIcon imageIcon = new ImageIcon(new ImageIcon("resources/ncl.png").getImage()
				.getScaledInstance(LOGO_DIMENSION_X, LOGO_DIMENSION_Y, Image.SCALE_SMOOTH)); // scale logo
		iconHolder.setIcon(imageIcon);
		headerPanel.add(iconHolder);

		/* Setup body panel to handle scraping input */
		JPanel bodyPanel = new JPanel();
		bodyPanel.setLayout(new FlowLayout());

		// Bank Combo Box //
		this.cb = new JComboBox(banks);
		final JButton bankButton = new JButton("Scrape");

		bodyPanel.add(cb);
		bodyPanel.add(bankButton);

		/* Main Content Panel */
		JPanel contentPanel = new JPanel();
		contentPanel.setLayout(new FlowLayout());

		// Input for SMS Spoofing //
		final JButton phoneButton = new JButton("Spoof");
		final JTextField textField = new JTextField("+44");
		textField.setColumns(15);
		contentPanel.add(textField);
		contentPanel.add(phoneButton);

		/* Disable input fields which should be unavailable */
		phoneButton.setEnabled(false);
		textField.setEnabled(false);

		// Handle the events when scraping is selected //
		bankButton.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent e) {
				// Disable inputs if a bank name is selected //
				bankButton.setEnabled(false);
				cb.setEnabled(false);

				// Create runnable with selected bank name //
				final String bankName = (String) cb.getItemAt(cb.getSelectedIndex());
				Thread T1 = new Thread(new Runnable() {

					public void run() {
						try {
							new Scraper(bankName).fetchTrustedNumbers(bankName);;
						} catch (MalformedURLException e) {
							e.printStackTrace();
						}

					}
				});
				log.append("Fetching trusted numbers\n"); // write to log

				// Begin the thread and wait for scraping to complete //
				T1.start();
				try {
					T1.join();
				} catch (InterruptedException e1) {
					e1.printStackTrace();
				}

				phoneButton.setEnabled(true);
				textField.setEnabled(true);
			}
		});
		// Handle the events when spoofing is selected //
		phoneButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String phoneNumber = textField.getText();
				Pattern p = Pattern.compile(Scraper.UK_MOBILE_REGEX); // Setup regular expression handler
				if (!matchPhoneNumber(phoneNumber)) {
					DateFormat dateFormat = new SimpleDateFormat("[HH:mm:ss]:");
					Date date = new Date();
					App.log.append(dateFormat.format(date));
					App.log.append(phoneNumber + " is an invalid phone number \n");
					return;
				}
				// Disable spoofing inputs upon selection //
				phoneButton.setEnabled(false);
				textField.setEnabled(false);

				/* Instance the API Interface */
				API api = new API(phoneNumber);
				// Try to send the spoofed text messages from the trusted numbers //
				try {
					api.sendText();
				} catch (IOException IO_e) {
					IO_e.printStackTrace(); // Print IO Exception stack trace //
				}

			}
		});

		final JButton export = new JButton("Export Results");
		// Handle the events when exporting is selected //
		export.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent e) {

				// Setup file selection objects //
				final JFileChooser SaveAs = new JFileChooser();
				SaveAs.setApproveButtonText("Save");

				// File selection dialog //
				int actionDialog = SaveAs.showOpenDialog(jframe);
				if (actionDialog != JFileChooser.APPROVE_OPTION) {
					return;
				}

				File fileName = new File(SaveAs.getSelectedFile() + ".txt"); // create or use selected file
				BufferedWriter outFile = null;
				/* Try to create, read and write the file */
				try {
					outFile = new BufferedWriter(new FileWriter(fileName));
					log.write(outFile);
				} catch (IOException IO_E2) {
					IO_E2.printStackTrace();
					// Once writing has been completed save and exit //
				} finally {
					if (outFile != null) {
						try {
							outFile.close();
							export.setEnabled(false); // disable saving button
							export.setText("Saved: " + SaveAs.getSelectedFile() + ".txt"); // update user about status
						} catch (IOException IO_E3) {
							IO_E3.printStackTrace();
						}
					}
				}

			}
		});

		// Assign properties to the demonstrator log //
		log.append("Demonstrator Log\n");
		log.setWrapStyleWord(true);
		log.setEnabled(false);
		JScrollPane scrollableText = new JScrollPane(log); /* SCROLLABLE */
		scrollableText.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS); /* TEXT AREA */

		// Finally: append each panel to the main jframe //
		jframe.add(headerPanel);
		jframe.add(bodyPanel);
		jframe.add(contentPanel);
		jframe.add(scrollableText);
		jframe.add(export);
		jframe.setVisible(true);
	}

	/**
	 * Matches a phone number using regular expressions to determine if it is a
	 * valid UK Number
	 * 
	 * @param phoneNumber - phone number to be checked
	 * @return - boolean true or false depending on the result
	 */
	public static boolean matchPhoneNumber(String phoneNumber) {
		Pattern p = Pattern.compile(Scraper.UK_MOBILE_REGEX); // Setup regular expression handler
		Matcher m = p.matcher(phoneNumber);
		return m.matches();

	}
}
